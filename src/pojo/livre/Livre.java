package pojo.livre;

// Generated 14-avr.-2014 13:45:30 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import pojo.common.ResponsableEditeur;

/**
 * LLivre generated by hbm2java
 */
@Entity
@Table(name = "l_livre", catalog = "gestion_resto2")
public class Livre implements java.io.Serializable {

	private Integer idLivre;
	private CategorieLivre LCategorielivre;
	private ResponsableEditeur responsableediteur;
	private Edition LEdition;
	private String titre;
	private String sousTitre;
	private String isbn;
	private String format;
	private int nbPages;
	private String collection;
	private Date dateEncodage;
	private Set<CommentaireLivre> LCommentaires = new HashSet<CommentaireLivre>(0);
	private Set<Auteur> LAuteurs = new HashSet<Auteur>(0);

	public Livre() {
	}

	public Livre(CategorieLivre LCategorielivre,
			ResponsableEditeur responsableediteur, Edition LEdition,
			String titre, String sousTitre, String isbn, String format,
			int nbPages, String collection, Date dateEncodage) {
		this.LCategorielivre = LCategorielivre;
		this.responsableediteur = responsableediteur;
		this.LEdition = LEdition;
		this.titre = titre;
		this.sousTitre = sousTitre;
		this.isbn = isbn;
		this.format = format;
		this.nbPages = nbPages;
		this.collection = collection;
		this.dateEncodage = dateEncodage;
	}

	public Livre(CategorieLivre LCategorielivre,
			ResponsableEditeur responsableediteur, Edition LEdition,
			String titre, String sousTitre, String isbn, String format,
			int nbPages, String collection, Date dateEncodage,
			Set<CommentaireLivre> LCommentaires, Set<Auteur> LAuteurs) {
		this.LCategorielivre = LCategorielivre;
		this.responsableediteur = responsableediteur;
		this.LEdition = LEdition;
		this.titre = titre;
		this.sousTitre = sousTitre;
		this.isbn = isbn;
		this.format = format;
		this.nbPages = nbPages;
		this.collection = collection;
		this.dateEncodage = dateEncodage;
		this.LCommentaires = LCommentaires;
		this.LAuteurs = LAuteurs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idLivre", unique = true, nullable = false)
	public Integer getIdLivre() {
		return this.idLivre;
	}

	public void setIdLivre(Integer idLivre) {
		this.idLivre = idLivre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idCategorieLivre", nullable = false)
	public CategorieLivre getLCategorielivre() {
		return this.LCategorielivre;
	}

	public void setLCategorielivre(CategorieLivre LCategorielivre) {
		this.LCategorielivre = LCategorielivre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idPersonne", nullable = false)
	public ResponsableEditeur getResponsableediteur() {
		return this.responsableediteur;
	}

	public void setResponsableediteur(ResponsableEditeur responsableediteur) {
		this.responsableediteur = responsableediteur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEdition", nullable = false)
	public Edition getLEdition() {
		return this.LEdition;
	}

	public void setLEdition(Edition LEdition) {
		this.LEdition = LEdition;
	}

	@Column(name = "titre", nullable = false, length = 50)
	public String getTitre() {
		return this.titre;
	}

	public void setTitre(String titre) {
		this.titre = titre;
	}

	@Column(name = "sousTitre", nullable = false, length = 100)
	public String getSousTitre() {
		return this.sousTitre;
	}

	public void setSousTitre(String sousTitre) {
		this.sousTitre = sousTitre;
	}

	@Column(name = "isbn", nullable = false, length = 13)
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "format", nullable = false, length = 20)
	public String getFormat() {
		return this.format;
	}

	public void setFormat(String format) {
		this.format = format;
	}

	@Column(name = "nbPages", nullable = false)
	public int getNbPages() {
		return this.nbPages;
	}

	public void setNbPages(int nbPages) {
		this.nbPages = nbPages;
	}

	@Column(name = "collection", nullable = false, length = 100)
	public String getCollection() {
		return this.collection;
	}

	public void setCollection(String collection) {
		this.collection = collection;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateEncodage", nullable = false, length = 19)
	public Date getDateEncodage() {
		return this.dateEncodage;
	}

	public void setDateEncodage(Date dateEncodage) {
		this.dateEncodage = dateEncodage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "LLivre")
	public Set<CommentaireLivre> getLCommentaires() {
		return this.LCommentaires;
	}

	public void setLCommentaires(Set<CommentaireLivre> LCommentaires) {
		this.LCommentaires = LCommentaires;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "LLivres")
	public Set<Auteur> getLAuteurs() {
		return this.LAuteurs;
	}

	public void setLAuteurs(Set<Auteur> LAuteurs) {
		this.LAuteurs = LAuteurs;
	}

}
